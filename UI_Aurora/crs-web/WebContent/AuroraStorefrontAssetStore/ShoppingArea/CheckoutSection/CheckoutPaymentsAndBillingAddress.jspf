<%--
=================================================================
Copyright [2021] [HCL Technologies]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
=================================================================
--%>
<%--
*****
This JSP file is a fragment that displays the Billing Information section of the Shipping and Billing page of the store.
The section lets shoppers enter the payment information for their orders. It supports 3 separate payment methods in an
order.
*****
--%>
<!-- BEGIN CheckoutPaymentsAndBillingAddress.jspf -->

<!-- BRAINTREE START--> 
<!-- hosted fields -->
<script src="https://js.braintreegateway.com/web/3.38.0/js/hosted-fields.min.js"></script>
<!-- google pay -->
<script src="https://pay.google.com/gp/p/js/pay.js"></script>
<script src="https://js.braintreegateway.com/web/3.38.0/js/google-payment.min.js"></script>
<!-- apple pay -->
<script src="https://js.braintreegateway.com/web/3.38.0/js/apple-pay.min.js"></script>
<script src="https://js.braintreegateway.com/web/3.38.0/js/data-collector.min.js"></script>
<!-- Load the 3D Secure component. -->
<script src="https://js.braintreegateway.com/web/3.38.0/js/three-d-secure.min.js"></script>
<!--apple pay-->
<script src="https://js.braintreegateway.com/web/3.38.0/js/apple-pay.min.js"></script>

<script>
	var instances_BT=[];
	var gPayPaymentsClient_BT=[];
</script>
<!--  BRAINTREE END -->
<script type="text/javascript">
	<flow:ifEnabled feature="Analytics">
		analyticsJS.loadPaymentPageView(CheckoutPayments);
	</flow:ifEnabled>

	var paymentSnippetsURLMap = {};
	<c:forEach var="payment" varStatus="paymentCounter" items="${usablePaymentInfo.usablePaymentInformation}">
		<c:if test="${payment.paymentMethodName != 'PayInStore'}">
			paymentSnippetsURLMap['<c:out value="${payment.paymentMethodName}" />'] = '<c:out value="${payment.xumet_attrPageName}" />';
		</c:if>
	</c:forEach>
	
	$(document).ready(function(){
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT" var="EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT" var="EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_ACCOUNT_NUMBER" var="EDPPaymentMethods_NO_ACCOUNT_NUMBER"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_INVALID_EXPIRY_DATE" var="EDPPaymentMethods_INVALID_EXPIRY_DATE"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_AMOUNT" var="EDPPaymentMethods_NO_AMOUNT"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_AMOUNT_NAN" var="EDPPaymentMethods_AMOUNT_NAN"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_AMOUNT_LT_ZERO" var="EDPPaymentMethods_AMOUNT_LT_ZERO"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_BILLING_ADDRESS" var="EDPPaymentMethods_NO_BILLING_ADDRESS"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_BILLING_ADDRESS_INVALID" var="EDPPaymentMethods_BILLING_ADDRESS_INVALID"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_CVV_NOT_NUMERIC" var="EDPPaymentMethods_CVV_NOT_NUMERIC"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM" var="EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_PAYMENT_SELECTED" var="EDPPaymentMethods_NO_PAYMENT_SELECTED"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_ROUTING_NUMBER" var="EDPPaymentMethods_NO_ROUTING_NUMBER"/>
		<fmt:message bundle="${storeText}" key="EDPPaymentMethods_NO_BANK_ACCOUNT_NO" var="EDPPaymentMethods_NO_BANK_ACCOUNT_NO"/>
		<fmt:message bundle="${storeText}" key="PROMOTION_CODE_EMPTY" var="PROMOTION_CODE_EMPTY"/>
		<fmt:message bundle="${storeText}" key="PO_Number" var="PO_Number"/>
		<fmt:message bundle="${storeText}" key="ERROR_PONumberEmpty" var="ERROR_PONumberEmpty"/>
		<fmt:message bundle="${storeText}" key="ERROR_PONumberTooLong" var="ERROR_PONumberTooLong"/>
		
		<!--BRAINTREE START-->
		<fmt:message bundle="${storeText}" key="BT_GENERIC_CLIENT_TOKEN_ERROR" var="BT_GENERIC_CLIENT_TOKEN_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_GENERIC_DEVICE_DATA_ERROR" var="BT_GENERIC_DEVICE_DATA_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_PAYPAL_ONCANCEL" var="BT_PAYPAL_ONCANCEL"/>
		<fmt:message bundle="${storeText}" key="BT_PAYPAL_ONERROR" var="BT_PAYPAL_ONERROR"/>
		<fmt:message bundle="${storeText}" key="BT_PAYPAL_CHECKOUTERROR" var="BT_PAYPAL_CHECKOUTERROR"/>
		<fmt:message bundle="${storeText}" key="BT_VENMO_VENMOERROR_VENMO_CANCELED" var="BT_VENMO_VENMOERROR_VENMO_CANCELED"/>
		<fmt:message bundle="${storeText}" key="BT_VENMO_VENMOERROR_VENMO_APP_CANCELED" var="BT_VENMO_VENMOERROR_VENMO_APP_CANCELED"/>
		<fmt:message bundle="${storeText}" key="BT_VENMO_VENMOERROR_GENERIC" var="BT_VENMO_VENMOERROR_GENERIC"/>
		<fmt:message bundle="${storeText}" key="BT_GOOGLEPAY_PARSING_ERROR" var="BT_GOOGLEPAY_PARSING_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_GOOGLEPAY_ERROR_AT_LOADPAYMENTDATA" var="BT_GOOGLEPAY_ERROR_AT_LOADPAYMENTDATA"/>
		<fmt:message bundle="${storeText}" key="BT_GOOGLEPAY_RESPONSE_FAILED_ERROR" var="BT_GOOGLEPAY_RESPONSE_FAILED_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_GOOGLEPAY_PAYMENT_ERROR" var="BT_GOOGLEPAY_PAYMENT_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_APPLEPAY_DEVICE_NOT_SUPPORTED" var="BT_APPLEPAY_DEVICE_NOT_SUPPORTED"/>
		<fmt:message bundle="${storeText}" key="BT_APPLEPAY_DEVICE_NOT_CAPABLE" var="BT_APPLEPAY_DEVICE_NOT_CAPABLE"/>
		<fmt:message bundle="${storeText}" key="BT_APPLEPAY_APPLEPAY_ERR" var="BT_APPLEPAY_APPLEPAY_ERR"/>
		<fmt:message bundle="${storeText}" key="BT_APPLEPAY_PERFORM_VALIDATION_ERR" var="BT_APPLEPAY_PERFORM_VALIDATION_ERR"/>
		<fmt:message bundle="${storeText}" key="BT_APPLEPAY_TOKENIZEERR" var="BT_APPLEPAY_TOKENIZEERR"/>
		<fmt:message bundle="${storeText}" key="BT_THREE_D_SECURE_ERROR" var="BT_THREE_D_SECURE_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_THREE_D_SECURE_RESPONSE_FAILED_ERROR" var="BT_THREE_D_SECURE_RESPONSE_FAILED_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_EMPTY_PAYMENT_ERROR" var="BT_EMPTY_PAYMENT_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_ERROR" var="BT_HOSTEDFIELDS_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_CVV_FIELD_EMPTY" var="BT_CVV_FIELD_EMPTY"/>
		<fmt:message bundle="${storeText}" key="BT_CVV_FIELD_INVALID" var="BT_CVV_FIELD_INVALID"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_EMPTY" var="BT_HOSTEDFIELDS_EMPTY"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_INVALID" var="BT_HOSTEDFIELDS_INVALID"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_NETWORK_ERROR" var="BT_HOSTEDFIELDS_NETWORK_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_TOKENIZATION_FAIL_ON_DUPLICATE" var="BT_HOSTEDFIELDS_TOKENIZATION_FAIL_ON_DUPLICATE"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED" var="BT_HOSTEDFIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_FAILED_TOKENIZATION" var="BT_HOSTEDFIELDS_FAILED_TOKENIZATION"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_DEFAULT_ERROR" var="BT_HOSTEDFIELDS_DEFAULT_ERROR"/>
		<fmt:message bundle="${storeText}" key="BT_HOSTEDFIELDS_HOSTEDFIELDSERR_FOR_CVV" var="BT_HOSTEDFIELDS_HOSTEDFIELDSERR_FOR_CVV"/>
		
		
		<!--BRAINTREE END-->

		CheckoutPayments.setErrorMessage("EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT", <wcf:json object="${EDPPaymentMethods_CANNOT_RECONCILE_PAYMENT_AMT}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT", <wcf:json object="${EDPPaymentMethods_PAYMENT_AMOUNT_LARGER_THAN_ORDER_AMOUNT}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_ACCOUNT_NUMBER", <wcf:json object="${EDPPaymentMethods_NO_ACCOUNT_NUMBER}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_INVALID_EXPIRY_DATE", <wcf:json object="${EDPPaymentMethods_INVALID_EXPIRY_DATE}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_AMOUNT", <wcf:json object="${EDPPaymentMethods_NO_AMOUNT}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_AMOUNT_NAN", <wcf:json object="${EDPPaymentMethods_AMOUNT_NAN}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_AMOUNT_LT_ZERO", <wcf:json object="${EDPPaymentMethods_AMOUNT_LT_ZERO}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_BILLING_ADDRESS", <wcf:json object="${EDPPaymentMethods_NO_BILLING_ADDRESS}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_BILLING_ADDRESS_INVALID", <wcf:json object="${EDPPaymentMethods_BILLING_ADDRESS_INVALID}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_CVV_NOT_NUMERIC", <wcf:json object="${EDPPaymentMethods_CVV_NOT_NUMERIC}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM", <wcf:json object="${EDPPaymentMethods_PAYMENT_AMOUNT_PROBLEM}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_PAYMENT_SELECTED", <wcf:json object="${EDPPaymentMethods_NO_PAYMENT_SELECTED}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_ROUTING_NUMBER", <wcf:json object="${EDPPaymentMethods_NO_ROUTING_NUMBER}"/>);
		CheckoutPayments.setErrorMessage("EDPPaymentMethods_NO_BANK_ACCOUNT_NO", <wcf:json object="${EDPPaymentMethods_NO_BANK_ACCOUNT_NO}"/>);
		CheckoutPayments.setErrorMessage("PROMOTION_CODE_EMPTY", <wcf:json object="${PROMOTION_CODE_EMPTY}"/>);
		CheckoutPayments.setErrorMessage("PO_NUMBER", <wcf:json object="${PO_NUMBER}"/>);
		CheckoutPayments.setErrorMessage("ERROR_PONumberEmpty", <wcf:json object="${ERROR_PONumberEmpty}"/>);
		CheckoutPayments.setErrorMessage("ERROR_PONumberTooLong", <wcf:json object="${ERROR_PONumberTooLong}"/>);
		
		<!--BRAINTREE START-->
		CheckoutPayments.setErrorMessage("BT_GENERIC_CLIENT_TOKEN_ERROR", <wcf:json object="${BT_GENERIC_CLIENT_TOKEN_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_GENERIC_DEVICE_DATA_ERROR", <wcf:json object="${BT_GENERIC_DEVICE_DATA_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_PAYPAL_ONCANCEL", <wcf:json object="${BT_PAYPAL_ONCANCEL}"/>);
		CheckoutPayments.setErrorMessage("BT_PAYPAL_ONERROR", <wcf:json object="${BT_PAYPAL_ONERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_PAYPAL_CHECKOUTERROR", <wcf:json object="${BT_PAYPAL_CHECKOUTERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_VENMO_VENMOERROR_VENMO_CANCELED", <wcf:json object="${BT_VENMO_VENMOERROR_VENMO_CANCELED}"/>);
		CheckoutPayments.setErrorMessage("BT_VENMO_VENMOERROR_VENMO_APP_CANCELED", <wcf:json object="${BT_VENMO_VENMOERROR_VENMO_APP_CANCELED}"/>);
		CheckoutPayments.setErrorMessage("BT_VENMO_VENMOERROR_GENERIC", <wcf:json object="${BT_VENMO_VENMOERROR_GENERIC}"/>);
		CheckoutPayments.setErrorMessage("BT_GOOGLEPAY_PARSING_ERROR", <wcf:json object="${BT_GOOGLEPAY_PARSING_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_GOOGLEPAY_ERROR_AT_LOADPAYMENTDATA", <wcf:json object="${BT_GOOGLEPAY_ERROR_AT_LOADPAYMENTDATA}"/>);
		CheckoutPayments.setErrorMessage("BT_GOOGLEPAY_RESPONSE_FAILED_ERROR", <wcf:json object="${BT_GOOGLEPAY_RESPONSE_FAILED_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_GOOGLEPAY_PAYMENT_ERROR", <wcf:json object="${BT_GOOGLEPAY_PAYMENT_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_APPLEPAY_DEVICE_NOT_SUPPORTED", <wcf:json object="${BT_APPLEPAY_DEVICE_NOT_SUPPORTED}"/>);
		CheckoutPayments.setErrorMessage("BT_APPLEPAY_DEVICE_NOT_CAPABLE", <wcf:json object="${BT_APPLEPAY_DEVICE_NOT_CAPABLE}"/>);
		CheckoutPayments.setErrorMessage("BT_APPLEPAY_APPLEPAY_ERR", <wcf:json object="${BT_APPLEPAY_APPLEPAY_ERR}"/>);
		CheckoutPayments.setErrorMessage("BT_APPLEPAY_PERFORM_VALIDATION_ERR", <wcf:json object="${BT_APPLEPAY_PERFORM_VALIDATION_ERR}"/>);
		CheckoutPayments.setErrorMessage("BT_APPLEPAY_TOKENIZEERR", <wcf:json object="${BT_APPLEPAY_TOKENIZEERR}"/>);
		CheckoutPayments.setErrorMessage("BT_THREE_D_SECURE_ERROR", <wcf:json object="${BT_THREE_D_SECURE_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_THREE_D_SECURE_RESPONSE_FAILED_ERROR", <wcf:json object="${BT_THREE_D_SECURE_RESPONSE_FAILED_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_EMPTY_PAYMENT_ERROR", <wcf:json object="${BT_EMPTY_PAYMENT_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_ERROR", <wcf:json object="${BT_HOSTEDFIELDS_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_CVV_FIELD_EMPTY", <wcf:json object="${BT_CVV_FIELD_EMPTY}"/>);
		CheckoutPayments.setErrorMessage("BT_CVV_FIELD_INVALID", <wcf:json object="${BT_CVV_FIELD_INVALID}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_EMPTY", <wcf:json object="${BT_HOSTEDFIELDS_EMPTY}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_INVALID", <wcf:json object="${BT_HOSTEDFIELDS_INVALID}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_NETWORK_ERROR", <wcf:json object="${BT_HOSTEDFIELDS_NETWORK_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_TOKENIZATION_FAIL_ON_DUPLICATE", <wcf:json object="${BT_HOSTEDFIELDS_TOKENIZATION_FAIL_ON_DUPLICATE}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED", <wcf:json object="${BT_HOSTEDFIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_FAILED_TOKENIZATION", <wcf:json object="${BT_HOSTEDFIELDS_FAILED_TOKENIZATION}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_DEFAULT_ERROR", <wcf:json object="${BT_HOSTEDFIELDS_DEFAULT_ERROR}"/>);
		CheckoutPayments.setErrorMessage("BT_HOSTEDFIELDS_HOSTEDFIELDSERR_FOR_CVV", <wcf:json object="${BT_HOSTEDFIELDS_HOSTEDFIELDSERR_FOR_CVV}"/>);
		
		
		<!--BRAINTREE END-->

		CheckoutPayments.setLocale('<c:out value='${locale}'/>');
		CheckoutPayments.initializeOverallPaymentObjects();
		CheckoutPayments.initializePaymentAreaDataDirtyFlags();

	});
</script>

<c:forEach var="paymentInstance" varStatus="paymentInstructionCounter" items="${paymentInstruction.paymentInstruction}">
	<c:if test="${!empty existingPI}">
		<c:set var="existingPI" value="${existingPI},"/>
	</c:if>
	<c:set var="existingPI" value="${existingPI}${paymentInstance.piId}"/>
	
	<%-- Unbound payment instructions --%>
	<c:if test="${paymentInstance.piAmount == '0.00000'}">
		<c:if test="${!empty unboundPI}">
			<c:set var="unboundPI" value="${unboundPI},"/>
		</c:if>
		<c:set var="unboundPI" value="${unboundPI}${paymentInstance.piId}"/>
	</c:if>
</c:forEach>

<script type="text/javascript">
	// declarePaymentAreaController defined in ShippingAndBillingControllersDeclaration.js uses this parameter in refreshurl
	var paymentAreaUrlParam = '?storeId=<c:out value="${WCParam.storeId}" />&catalogId=<c:out value="${WCParam.catalogId}" />&langId=<c:out value="${WCParam.langId}" />';
</script>

<c:forEach var="i" begin="1" end="${numberOfPaymentMethods}">
<script type="text/javascript">
$(document).ready(function(){
	CheckoutHelperJS.showHideEditBillingAddressLink((document.getElementsByName('billing_address_id'))[<c:out value="${i}"/>-1],<c:out value="${i}"/>);
});
</script>
</c:forEach>

<!-- We will submit the order in the next page..For now prepare the order and then start the checkOut process..In checkOut process
add all the payment instructions and then redirect user to Order Summary Page.. There we will submit the order and get back
the final confirmation -->

<div wcType="RefreshArea" id="orderTotalAmountArea" widgetId="orderTotalAmountArea" declareFunction="declareOrderTotalController()" ></div>

<c:set var="punchoutPaymentAllowed" value="false" />
<flow:ifEnabled feature="PunchoutPayment">
	<c:set var="punchoutPaymentAllowed" value="true" />
</flow:ifEnabled>

<c:set var="PurchaseOrderEntryField" value="true"/>
<%@ include file="POSnippet.jspf" %>
<c:forEach var="i" begin="1" end="${numberOfPaymentMethods}" varStatus="status2">
	
	<c:choose>
		<c:when test="${!quickCheckoutProfileForPayment}">
			<c:set var="displayMethod" value="display:none" />
			<c:set var="existingPaymentInstance" value="${paymentInstruction.paymentInstruction[i-1]}"/>
			<c:set var="paymentMethodSelected" value="${existingPaymentInstance.payMethodId}"/>
			<c:set var="existingProtocolData" value="${existingPaymentInstance.protocolData}"/>
			<c:set var="isTokenization" value="${existingPaymentInstance.xpaym_tokenization}"/>
			<c:set var="paymentMethodBillingAddressId" value=""/>
			<c:set var="piAmount" value="${existingPaymentInstance.piAmount}"/>
			<%-- Show the block if this is first payment or if there are payment methods in subsequent blocks --%>
			<c:if test="${!empty paymentMethodSelected || i == 1}">
				<c:set var="displayMethod" value="display:block" />
			</c:if>
			<!-- BRAINTREE START --> <!--when conditions are added for pay_nonce and pay_type  below-->
			<c:forEach var="protocolData" items="${existingProtocolData}">
				<c:choose>
					<c:when test="${protocolData.name eq 'cc_brand'}">
						<c:set var="cc_brand" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'cc_cvc'}">
						<c:set var="cc_cvc" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'expire_year'}">
						<c:set var="expire_year" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'expire_month'}">
						<c:set var="expire_month" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'pay_nonce'}">
						<c:set var="pay_nonce" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'pay_type'}">
						<c:set var="pay_type" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${isTokenization && protocolData.name eq 'display_value'}">
						<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
							<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
							<wcf:param name="plainString" value="${protocolData.value}"/>
						</wcf:rest>
						<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />		
						<c:set var="display_value" value="${edpMaskBean.resultList[0].maskedString}" />					
					</c:when>			
					<c:when test="${isTokenization && protocolData.name eq 'payment_token'}">
						<c:set var="payment_token" value="${protocolData.value}"/>
					</c:when>
									
					<c:when test="${!isTokenization && protocolData.name eq 'account'}">
					   <wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
							<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
							<wcf:param name="plainString" value="${protocolData.value}"/>
						</wcf:rest>
						<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
					</c:when>
					<c:when test="${protocolData.name eq 'paymentTCId'}">
						<c:set var="paymentTCId" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'check_routing_number'}">
						<c:set var="check_routing_number" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'CheckAccount_number'}">
						<c:set var="CheckAccount_number" value="${protocolData.value}"/>
					</c:when>
					<c:when test="${protocolData.name eq 'billing_address_id'}">
						<c:set var="paymentMethodBillingAddressId" value="${protocolData.value}"/>
					</c:when>
				</c:choose>
			</c:forEach>
			<!-- BRAINTREE END -->
			<c:if test="${isTokenization && empty display_value && !empty payment_token && !empty paymentMethodSelected}">
			    <wcf:rest var="tokenData" url="store/{storeId}/cart/@self/payment_instruction/payment_token">
					<wcf:var name="storeId" value="${WCParam.storeId}" encode="true" />
					<wcf:param name="payment_token" value="${payment_token}" />
					<wcf:param name="payment_method" value="${paymentMethodSelected}" />								
				</wcf:rest>						
				<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
					<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
					<wcf:param name="plainString" value="${tokenData.payment_token_data.display_value}"/>
				</wcf:rest>
				<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
				<c:set var="display_value" value="" />
			</c:if>
		</c:when>
		<c:otherwise>
			<%-- we should use quick checkout profile..--%>
			<c:set var="displayMethod" value="display:none" />
			<c:set var="paymentMethodSelected" value=""/>
			<c:set var="piAmount" value=""/>
			<%-- quick checkout profile will have only one payment option.. show the first div.. --%>
			<c:if test="${i == 1}">
				<c:set var="displayMethod" value="display:block" />
				<%-- Use order list data bean and get protocol data --%>
				<%-- get the "profile" order containing the default payment and billing info --%>
				<wcf:rest var="orderListBean" url="store/{storeId}/order" scope="request">
					<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
					<wcf:param name="q" value="orderProfile"/>
					<wcf:param name="userId" value="${CommandContext.userId}"/>
					<wcf:param name="retrievalOrderStatus" value="Q"/>
					<wcf:param name="profileName" value="IBM_Summary_PaymentInfo"/>
				</wcf:rest>
				<c:forEach items="${orderListBean.resultList}" var="prof_orderBean" varStatus="status">
					<c:set var="payInfo" value="${prof_orderBean.paymentInfo}" />
					<c:if test="${!empty payInfo}">
						<c:set var="existingProtocolData" value="${payInfo}"  scope="request"/>
					</c:if>
					<c:forEach var="temp" items="${existingProtocolData}">
						<c:choose>
							<c:when test="${temp.key eq 'cc_brand'}">
								<c:set var="cc_brand" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'cc_cvc'}">
								<c:set var="cc_cvc" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'expire_year'}">
								<c:set var="expire_year" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'expire_month'}">
								<c:set var="expire_month" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'account'}">
								<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
									<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
									<wcf:param name="plainString" value="${temp.value}"/>
								</wcf:rest>
								<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
								<c:set var="unmaskedAccount" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'display_value'}">
								<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
									<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
									<wcf:param name="plainString" value="${temp.value}"/>
								</wcf:rest>
								<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
								<c:set var="unmaskedAccount" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'payment_token'}">
								<c:set var="payment_token" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'check_routing_number'}">
								<c:set var="check_routing_number" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'CheckAccount_number'}">
								<c:set var="CheckAccount_number" value="${temp.value}"/>
							</c:when>
							<c:when test="${temp.key eq 'payment_method'}">
								<c:set var="paymentMethodSelected" value="${temp.value}"/>
							</c:when>
						</c:choose>
					</c:forEach>
					<c:set var="paymentMethodBillingAddressId" value="${prof_orderBean.billingAddressDataBean.addressId}"/>
				</c:forEach>
				
				<c:if test="${empty account && !empty payment_token && !empty paymentMethodSelected}">
				    <wcf:rest var="tokenData" url="store/{storeId}/cart/@self/payment_instruction/payment_token">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true" />
						<wcf:param name="payment_token" value="${payment_token}" />
						<wcf:param name="payment_method" value="${paymentMethodSelected}" />								
					</wcf:rest>						
					<wcf:rest var="edpMaskBean" url="store/{storeId}/cart/@self/payment_instruction/sensitive_data_mask_by_plain_string">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
						<wcf:param name="plainString" value="${tokenData.payment_token_data.display_value}"/>
					</wcf:rest>
					<c:set var="account" value="${edpMaskBean.resultList[0].maskedString}" />
				</c:if>
				
				<%-- entire amount will be added to the first payment option in quick checkout profile --%>
				<%-- 
				<fmt:parseNumber var="piAmount" value="${order.grandTotal}"/>
				<c:set var="piAmount" value="${piAmount}"/> 
				--%>
				<c:set var="piAmount" value="${order.grandTotal}"/>
			</c:if>
		</c:otherwise>
	</c:choose>

	<div id="paymentSection<c:out value="${i}"/>" style="<c:out value="${displayMethod}"/>" >

		<div id="WC_CheckoutPaymentsAndBillingAddressf_div_1_<c:out value='${status2.count}'/>">
			<div id="billing_<c:out value='${i}'/>" class="billing<c:if test="${i >= 2}"> billing_border</c:if>">
				<c:if test="${numberOfPaymentMethods > 1}">
					<!-- Payment method number (payment1, payment2...) will be shown only if there are more than 1 payments..-->
					<div id="paymentHeading<c:out value="${i}"/>" class="payment_heading"> 
						<fmt:message bundle="${storeText}" key="PAYMENT_CAPS"/>
						<span id="numOfPaymentsIndicator<c:out value="${i}"/>"> <c:out value="${i}:"/></span>
					</div>
				</c:if>
				<form name="PaymentForm<c:out value="${i}"/>" id="PaymentForm<c:out value="${i}"/>" method="post" action="" onsubmit="javascript: return false;">
					<c:set var="paymentAreaNumber" value="${i}"/>
					<input type="hidden" value="<c:out value='${quickCheckoutProfileForPayment}'/>" id="quickCheckoutProfileForPayment_<c:out value='${i}'/>" name="quickCheckoutProfileForPayment"/>
					<input type="hidden" value="<c:out value='${paymentMethodBillingAddressId}'/>" id="selectedAddressId_<c:out value="${i}"/>" name="selectedAddressId_<c:out value="${i}"/>" />
					<input type="hidden" name="authToken" value="${authToken}" id="WC_CheckoutPaymentsAndBillingAddressf_input_authToken_<c:out value='${i}'/>"/>
					<input type="hidden" name="piId" value="" id="WC_CheckoutPaymentsAndBillingAddressf_piId_<c:out value='${i}'/>"/>
					<input type="hidden" name="paymentDataEditable" value="" id="WC_CheckoutPaymentsAndBillingAddressf_paymentDataEditable_<c:out value='${i}'/>"/>
					<input type="hidden" name="orderId" value="${order.orderId}" id="WC_CheckoutPaymentsAndBillingAddressf_orderId_<c:out value='${i}'/>"/>
					<input type="hidden" name="payment_token" value="${payment_token}" id="WC_CheckoutPaymentsAndBillingAddressf_payment_token_<c:out value='${i}'/>"/>
					<!-- BRAINTREE START -->
					<wcf:rest var="getPaymentOptions" url="braintree/{storeId}/paymentOptions" scope="request">
						<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
					</wcf:rest>
					<c:set var="getPaymentOptionsResult" value="${getPaymentOptions.result}"/>
					<c:set var="paypalBillingAddressEnable" value="${getPaymentOptionsResult.paypalBillingAddressEnable}"/>
					
					<c:set var="paypalBillingAddress" value="false" />
					<c:if test="${! empty WCParam.PayPalEmailId && paypalBillingAddressEnable eq 'true'}">
						<c:set var="paypalBillingAddress" value="true"/>
					</c:if>
					<div id="billingAddress<c:out value="${i}"/>" class="billing_address_container" style="<c:if test="${WCParam.isPickUpStore && ! empty WCParam.PayPalEmailId}">display:none;</c:if>">
					<!-- BRAINTREE END -->
						<!-- BRAINTREE START --> <!--added paypalBillingAddress  as a param-->
						<div wcType="RefreshArea" id = "billingAddressSelectBoxArea_<c:out value='${i}'/>" widgetId="billingAddressSelectBoxArea_<c:out value='${i}'/>" objectId='<c:out value="${i}"/>' declareFunction="declareBillingAddressSelectBoxAreaController('billingAddressSelectBoxArea_<c:out value='${i}'/>')"
							refreshurl = "<c:out value="${billingAddressDisplayURLs[i - 1]}"/>">
							<%out.flush();%>
								<c:import url="${env_jspStoreDir}/ShoppingArea/CheckoutSection/SingleShipment/BillingAddressDropDownDisplay.jsp">
									<c:param value="${paymentMethodBillingAddressId}" name="selectedAddressId"/>
									<c:param name="paymentAreaNumber" value="${i}"/>
									<c:param name="paymentMethodSelected" value="${paymentMethodSelected}"/>
									<c:param name="paypalBillingAddress" value="${paypalBillingAddress}"/>
								</c:import>
							<%out.flush();%>
						</div>
						<!--BRAINTREE END -->
					</div>
					<script type="text/javascript">
						$(document).ready(function() {
							CheckoutPayments.setNumPaymentIndicator();
							
						});
					</script>
					<div class="billing_method" id="WC_CheckoutPaymentsAndBillingAddressf_div_2_<c:out value='${status2.count}'/>">
						<p class="title"><fmt:message bundle="${storeText}" key="BILL_BILLING_METHOD_COLON"/></p>
						<label for="payMethodId_<c:out value='${i}'/>"><span class="spanacce"><fmt:message bundle="${storeText}" key='ACCE_BILLING_METHOD2'><fmt:param value='${i}'/></fmt:message></span></label>
						<p>
							<input type="hidden" name="storeId" value="<c:out value="${storeId}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_1_<c:out value='${status2.count}'/>"/>
							<input type="hidden" name="catalogId" value="<c:out value="${catalogId}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_2_<c:out value='${status2.count}'/>"/>
							<input type="hidden" name="langId" value="<c:out value="${langId}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_3_<c:out value='${status2.count}'/>"/>
							<input type="hidden" name="existingPiId" value="<c:out value="${existingPI}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_4_<c:out value='${status2.count}'/>"/>
							<input type="hidden" name="unboundPiId" value="<c:out value="${unboundPI}"/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_4b_<c:out value='${status2.count}'/>"/>
							<jsp:useBean id="now" class="java.util.Date" />
							<input type="hidden" name="curr_year" value="<c:out value='${now.year + 1900}'/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_5_<c:out value='${status2.count}'/>"/>
							<input type="hidden" name="curr_month" value="<c:out value='${now.month + 1}'/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_6_<c:out value='${status2.count}'/>"/>
							<input type="hidden" name="curr_date" value="<c:out value='${now.date}'/>" id="WC_CheckoutPaymentsAndBillingAddressf_inputs_7_<c:out value='${status2.count}'/>"/>
							<!-- Payment type promotion: onchange call the function CheckoutPayments.updateUnboundPaymentToOrder(); -->
							<!-- Removed Existing OOB payment Methods-->
							 
							 <!-- BRAINTREE START -->
							
							<!-- Rest calls for getting client token, paymentOptions, saved payments list details  -->
							<wcf:rest var="getToken" url="braintree/{storeId}/clienttoken" scope="request">
								<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
							</wcf:rest>
							<c:set var="getTokenResult" value="${getToken.result}"/>
							
							<c:set var="showSavedPaymentsFlag" value="${getPaymentOptionsResult.enableVaultToCustomer}"/>
							<c:set var="useVaultForAuth" value="${getPaymentOptionsResult.useVaultForAuth}"/>
							<c:set var="isPayPalCreditEnable" value="${getPaymentOptionsResult.isPaypalCreditEnable}"/>
							<c:set var="advancedFraudTools" value="${getPaymentOptionsResult.advancedFraudTools}"/>
							<c:set var="paypalEnableInCart" value="${getPaymentOptionsResult.paypalEnableInCart}"/>
							<c:set var="paypalMerchantName" value="${getPaymentOptionsResult.paypalMerchantName}"/>
							<c:set var="threeDSecureEnable" value="${getPaymentOptionsResult.threeDSecureEnable}"/>
							<c:set var="paypalFlow" value="${getPaymentOptionsResult.paypalFlow}"/>
							<c:set var="paypalIntent" value="${getPaymentOptionsResult.paypalIntent}"/>
							<c:set var="locale" value="${getPaymentOptionsResult.locale}"/>
							<c:set var="billingAgreementDescription" value="${getPaymentOptionsResult.billingAgreementDescription}"/>
							<c:set var="paymentEnvironment" value="${getPaymentOptionsResult.paymentEnvironment}"/>
							<c:set var="googlepayPaymentEnvironment" value="${getPaymentOptionsResult.googlepayPaymentEnvironment}"/>
							<c:set var="googlePayPaymentMerchantId" value="${getPaymentOptionsResult.googlePayPaymentMerchantId}"/>
							
							
							 
							<wcf:rest var="displayCardDetails" url="braintree/{storeId}/displayCardDetails" scope="request">
								<wcf:var name="storeId" value="${WCParam.storeId}" encode="true"/>
							</wcf:rest>
							<c:set var="creditCardDetailsList" value="${displayCardDetails.result}"/><br>
							<c:set var="creditCardDetailsListInfo" value="${creditCardDetailsList.btCardDetailsList}" />	
							<fmt:formatNumber var="orderTotalAmount" value="${order.grandTotal}" type="number" maxFractionDigits="2" />
							<input type="hidden" id="fromSavedPaymentFlag" name="fromSavedPaymentFlag" value="false" />
							<input type="hidden" id="pay_nonce" name="pay_nonce" value="${WCParam.pay_nonce}"/>
							<input type="hidden" id="pay_type" name="pay_type" value="${WCParam.pay_type}"/>
							<input type="hidden" id="pay_token" name="pay_token" value="${WCParam.pay_token}"/>
							<input type="hidden" id="PayPalEmailId" name="PayPalEmailId" value="${WCParam.PayPalEmailId}"/>
							<input type="hidden" id="cvv_nonce" name="cvv_nonce"/>
							<input type="hidden" id="paypalCredit" name="paypalCredit" value="${WCParam.paypalCredit}"/>
							<input type="hidden" id="deviceSessionId" name="deviceSessionId" value="${WCParam.deviceSessionId}"/>
							<input type="hidden" id="fraudMerchantId" name="fraudMerchantId" value="${WCParam.fraudMerchantId}"/>
							<input type="hidden" id="account" name="account"  />
							<input type="hidden" id="PaymentMethodId" name="PaymentMethodId"  />
							<input type="hidden" id="3Dsecure_nonce" name="3Dsecure_nonce"  />
							<input type="hidden" id="paypalBillingAddressId" name="paypalBillingAddressId" value="${WCParam.paypalBillingAddressId}" />
							
							<c:set var="attrPageName" value="${env_jspStoreDir}/Snippets/EDP/PaymentMethods/Empty.jsp" />
							
					<div style="display: flow-root;">
					<!--  Displaying Saved Payments List From Vault -->	
					<c:if test="${showSavedPaymentsFlag eq 'true' && userType != 'G'}">	
						<fieldset id="savedPayments">
							<legend class="spanacce" aria-hidden="true"><fmt:message bundle="${storeText}" key="SAVED_PAYMENTS"/></legend>
							<div class="vertical">
								<h4 class="spanacce" ><fmt:message bundle="${storeText}" key="SAVED_PAYMENTS"/></h4>
								<div id="section_button_savedPayments" class="optionContainer" style="width:290px;">
									<div role="button" tabindex="0" aria-label="SAVEDPAYMENTS" aria-describedby="facet_widget_acce_desc" onkeydown='if(event.keyCode === KeyCodes.SPACE || event.keyCode === KeyCodes.RETURN) {BrainTreePayments.toggleExpandNavBT("savedPayments","<c:out value='${showSavedPaymentsFlag}'/>"); return false;}' onclick='BrainTreePayments.toggleExpandNavBT("savedPayments","<c:out value='${showSavedPaymentsFlag}'/>"); return false;' class="title">
									<div id="icon_savedPayments" class="arrow arrow_collapsed"></div><fmt:message bundle="${storeText}" key="SAVED_PAYMENTS"/></div>
									<div id="section_list_savedPayments" class="facetSelectContainer" role="group" aria-expanded="false" aria-labelledby="section_button_savedPayments" style="display:none; margin-top: 10px; margin-left: 20px;">	
										<select class="drop_down_savedCards" style="height: 25px; width: 150px;" name="savedCardsList" id="savedCardsList" onchange="JavaScript:BrainTreePayments.displaySelectedCard('<c:out value='${getTokenResult.clientToken}'/>','<c:out value='${status2.count}'/>', '<c:out value='${creditCardDetailsListInfo}'/>');" >
											<option value="" selected="selected"><fmt:message bundle="${storeText}" key="SELECT_CARD"/></option> <!-- replace the display value with fmt:message tag-->
											  <c:forEach var="creditCardDetails" items="${creditCardDetailsListInfo}">
		               								 <option value="${creditCardDetails.payTokenId}" >${creditCardDetails.cardType} ${creditCardDetails.maskedCreditCardNumber}</option>
		           							 </c:forEach>
										</select> 
	  									<br>
	  									<div id ="showSavedCard" name="showSavedCard" style="display:none; margin-top: 10px;">	
	  									<div id="savedCreditCardInfo" style="display:none; margin-top: 10px;">
					  				    	<label for="card-number" style="font-weight:bold; "><fmt:message bundle="${storeText}" key="CARD_NUMBER"/></label><div id="maskedcardNumber"></div><br>
						  					<label for="expiration-date" style="margin-top:10px; font-weight:bold; "><fmt:message bundle="${storeText}" key="EXPIRATION_DATE"/></label><div id="expiryDate"></div><br>
						  					<div id="CVVhostedFieldsErrorMessage_<c:out value='${status2.count}'/>" style="display:none; color:red;  font-size: 15px;">
						  					
						  					</div>
						  					<label for="cvv" style="margin-top:10px; font-weight:bold; "><fmt:message bundle="${storeText}" key="CVV"/></label><div id="onlyCvv_<c:out value='${status2.count}'/>" style="height: 20px; width:50px;"></div>
						  				</div>
						  				<div id="savedPaymentInfo" style="display:none; margin-top: 10px;">
  												<label for="paymentAccount" style="font-weight:bold; "><fmt:message bundle="${storeText}" key="PAYPAL_EMAIL"/></label><div id="paymentAccountMail"></div><br>
  										</div>
						  					<br>
						  					<!-- <div id="deleteCard" ><input type="button" class="button_secondary tlignore" id="btnDelete" value="Delete Card" onclick="JavaScript:CheckoutPayments.deleteSelectedCardFromVault('dummy');"></div>-->
						  					<a role="button" class="button_secondary tlignore" style="width: 105px;" id="deleteCard" tabindex="0" href="JavaScript:BrainTreePayments.deleteSelectedCardFromVault(null);">
													<div class="left_border"></div>
													<div class="button_text"><fmt:message bundle="${storeText}" key="DELETE_PAYMENT"/></div>
													<div class="right_border"></div>
												</a>
										</div> 
									</div>
								</div>
							</div>
						</fieldset>
					</c:if>			
<script type="text/javascript">
	paymentAreaUrlParam = paymentAreaUrlParam + '&clientToken=<c:out value="${getTokenResult.clientToken}"/>&paymentMethodCount=<c:out value="${status2.count}"/>&grandTotal=${orderTotalAmount}&userType=${userType}&isPayPalCreditEnable=${isPayPalCreditEnable}&useVaultForAuth=${useVaultForAuth}&paypalCredit=${WCParam.paypalCredit}&PayPalEmailId=${WCParam.PayPalEmailId}&showSavedPaymentsFlag=${showSavedPaymentsFlag}&paypalFlow=${paypalFlow}';
	var advancedFraudTools = '${advancedFraudTools}';
	var paypalEnableInCart='${paypalEnableInCart}';
	var paypalMerchantName='${paypalMerchantName}';
	var grandTotalAmount = '${orderTotalAmount}'; 
	var btClientToken = '${getTokenResult.clientToken}';
	var threeDSecureEnable='${threeDSecureEnable}';
	var paypalFlow='${paypalFlow}';
	var paypalIntent='${paypalIntent}';
	var localeVal = '${locale}';
	var billingAgreementDescription ='${billingAgreementDescription}';
	var paypalBillingAddressEnable ='${paypalBillingAddressEnable}';
	var paymentEnvironment ='${paymentEnvironment}';
	var googlepayPaymentEnvironment = '${googlepayPaymentEnvironment}';
	var googlePayPaymentMerchantId = '${googlePayPaymentMerchantId}';
	
</script>
					
					<div id="modal" class="hidden threeDsecureWindow">
					  <div class="bt-mask"></div>
					  <div class="bt-modal-frame">
					    <div class="bt-modal-header">
					      <div class="header-text">Authentication</div>
					    </div>
					    <div class="bt-modal-body"></div>
					    <div class="bt-modal-footer"><a id="text-close" href="#">Cancel</a></div>
					  </div>
					</div>
					<!--  Displaying New payment Types -->	
					<fieldset id="newPayments" >
						<legend class="spanacce" aria-hidden="true"><fmt:message bundle="${storeText}" key="NEW_PAYMENT"/></legend>
							<div class="vertical">
								<h4 class="spanacce" ><fmt:message bundle="${storeText}" key="NEW_PAYMENT"/></h4>
								<div id="section_button_newPayments" class="optionContainer" style="width:290px; margin-top: 15px;">
									<div role="button" tabindex="0" aria-label="NEWPAYMENTS" aria-describedby="facet_widget_acce_desc" onkeydown='if(event.keyCode === KeyCodes.SPACE || event.keyCode === KeyCodes.RETURN) {BrainTreePayments.toggleExpandNavBT("newPayments","<c:out value='${showSavedPaymentsFlag}'/>");  return false;}' onclick='BrainTreePayments.toggleExpandNavBT("newPayments","<c:out value='${showSavedPaymentsFlag}'/>"); return false;' class="title">
										<div id="icon_newPayments" class="arrow arrow_collapsed"></div><fmt:message bundle="${storeText}" key="NEW_PAYMENT"/>
									</div>
									<div id="section_list_newPayments" class="facetSelectContainer" role="group" aria-expanded="false" aria-labelledby="section_button_newPayments" style="display:none; margin-top: 15px; margin-left: 15px; ">	
									 <c:forEach var="payment" varStatus="paymentCounter" items="${usablePaymentInfo.usablePaymentInformation}">
											<c:set var="currentPaymentMethodName" value="${payment.paymentMethodName}"/>
											<c:if test="${currentPaymentMethodName eq 'BT_CreditCard' }">
												<!--  Displaying Credit Card (Hosted Fields) payment Types -->	
												<div style="margin-top:10px">
													<input type="radio" name="payMethodId" value="${currentPaymentMethodName}" onclick="JavaScript:this.blur(); 
														CheckoutHelperJS.setOrderId('<c:out value='${usablePaymentInfo.orderId}'/>');
														 
														if ( (typeof(supportPaymentTypePromotions) == 'undefined') || (typeof(supportPaymentTypePromotions) != 'undefined' && !supportPaymentTypePromotions) ) { 
															CheckoutPayments.loadPaymentSnippet(this, <c:out value='${i}'/>); 
															CheckoutPayments.updatePaymentObject(<c:out value='${i}'/>, 'payMethodId');
														}
						
														if (typeof(supportPaymentTypePromotions) != 'undefined' && supportPaymentTypePromotions) {
																CheckoutPayments.updateUnboundPaymentToOrder(<c:out value="${i}"/>);
														} " />&nbsp;
													<label  style="font-weight: bold;"><fmt:message bundle="${storeText}" key="NEW_CARD"/></label>
												</div>
											</c:if>
											<c:if test="${currentPaymentMethodName eq 'BT_PayPal'}">
												<!--  Displaying Paypal payment Type -->	
												<div style="margin-top:10px">
													<input type="radio" name="payMethodId" value="${currentPaymentMethodName}" <c:if test="${! empty WCParam.PayPalEmailId}" >checked</c:if> 
													onclick="JavaScript:this.blur(); 
														CheckoutHelperJS.setOrderId('<c:out value='${usablePaymentInfo.orderId}'/>');
														 
														if ( (typeof(supportPaymentTypePromotions) == 'undefined') || (typeof(supportPaymentTypePromotions) != 'undefined' && !supportPaymentTypePromotions) ) { 
															CheckoutPayments.loadPaymentSnippet(this, <c:out value='${i}'/>); 
															CheckoutPayments.updatePaymentObject(<c:out value='${i}'/>, 'payMethodId');
														}
						
														if (typeof(supportPaymentTypePromotions) != 'undefined' && supportPaymentTypePromotions) {
																CheckoutPayments.updateUnboundPaymentToOrder(<c:out value="${i}"/>);
														}" >
													<c:if test="${empty WCParam.paypalCredit || ! WCParam.paypalCredit}" >
														<img src="https://www.paypalobjects.com/webstatic/en_US/i/buttons/pp-acceptance-medium.png" alt="PayPal" style="display: inline-block;vertical-align: middle;">
														&nbsp;&nbsp;
														<c:if test="${empty WCParam.paypalCredit}" >
															<a href="https://www.paypal.com/en/webapps/mpp/paypal-popup" target="_blank" style="color: #589bc6;">What's PayPal?</a>
														</c:if>
													</c:if>
													<!-- <label  style="font-weight: bold;"><fmt:message bundle="${storeText}" key="PAYPAL_CHECKOUT"/></label>-->
													<c:if test="${WCParam.paypalCredit}" >
														<img alt="" src="https://www.paypalobjects.com/webstatic/en_US/i/buttons/ppc-acceptance-medium.png" style="display: inline-block;vertical-align: middle;">
														&nbsp;&nbsp;
													</c:if>
													<c:if test="${! empty WCParam.PayPalEmailId}" >
												 		${WCParam.PayPalEmailId}
												 	</c:if>
												 </div>
											</c:if>
											<c:if test="${currentPaymentMethodName eq 'BT_GooglePay'}">
									 			<div style="margin-top:10px">
													<!--  Displaying Google Pay payment Type -->	
													<input type="radio" name="payMethodId" value="${currentPaymentMethodName}" onclick="JavaScript:this.blur(); 
														CheckoutHelperJS.setOrderId('<c:out value='${usablePaymentInfo.orderId}'/>');
														 
														if ( (typeof(supportPaymentTypePromotions) == 'undefined') || (typeof(supportPaymentTypePromotions) != 'undefined' && !supportPaymentTypePromotions) ) { 
															CheckoutPayments.loadPaymentSnippet(this, <c:out value='${i}'/>); 
															CheckoutPayments.updatePaymentObject(<c:out value='${i}'/>, 'payMethodId');
														}
						
														if (typeof(supportPaymentTypePromotions) != 'undefined' && supportPaymentTypePromotions) {
																CheckoutPayments.updateUnboundPaymentToOrder(<c:out value="${i}"/>);
														}" >
													<label style="font-weight: bold;"><fmt:message bundle="${storeText}" key="GOOGLE_PAY"/></label>
												</div>
		 									</c:if>
		 									<c:if test="${currentPaymentMethodName eq 'BT_ApplePay'}">
									 			<div id="applepaypayment" style="margin-top:10px; display:none;">
													<!--  Displaying Google Pay payment Type -->	
													<input type="radio" name="payMethodId" value="${currentPaymentMethodName}" onclick="JavaScript:this.blur(); 
														CheckoutHelperJS.setOrderId('<c:out value='${usablePaymentInfo.orderId}'/>');
														 
														if ( (typeof(supportPaymentTypePromotions) == 'undefined') || (typeof(supportPaymentTypePromotions) != 'undefined' && !supportPaymentTypePromotions) ) { 
															CheckoutPayments.loadPaymentSnippet(this, <c:out value='${i}'/>); 
															CheckoutPayments.updatePaymentObject(<c:out value='${i}'/>, 'payMethodId');
														}
						
														if (typeof(supportPaymentTypePromotions) != 'undefined' && supportPaymentTypePromotions) {
																CheckoutPayments.updateUnboundPaymentToOrder(<c:out value="${i}"/>);
														}" >
													<label style="font-weight: bold;"><fmt:message bundle="${storeText}" key="APPLE_PAY"/></label>
												</div>
		 									</c:if>
		 									
										</c:forEach>
									</div>
								</div>
							</div>
						<!-- BRAINTREE END -->	
					<input type="hidden" name="buyerOrgDN" value="<c:out value="${order.orgDistinguishedName}"/>"/>
							
							<!-- This div is for Web2.0 Style -->
							<!--BRAINTREE START --> <!--added class selectedPaymentPage , modified piAmount value-->
							<div wcType="RefreshArea" class="selectedPaymentPage" widgetId="paymentArea<c:out value="${i}"/>" declareFunction="declarePaymentAreaController('paymentArea<c:out value="${i}"/>')" id="paymentArea<c:out value="${i}"/>">
								<%out.flush();%>
									<c:import url="${attrPageName}">
										<c:param name="paymentAreaNumber" value= "${paymentAreaNumber}"/>
										<c:param name="cc_brand" value="${cc_brand}"/>
										<c:param name="cc_cvc" value="${cc_cvc}"/>
										<c:param name="expire_year" value="${expire_year}"/>
										<c:param name="expire_month" value="${expire_month}"/>
										<c:param name="account" value="${account}"/>
										<c:param name="check_routing_number" value="${check_routing_number}"/>
										<c:param name="CheckAccount_number" value="${CheckAccount_number}"/>
										<c:param name="piAmount" value="${orderTotalAmount}"/>
										<c:param name="edp_ProtocolData" value="${existingProtocolData}"/>
										<c:param name="paymentTCId" value="${paymentTCId}"/>
									</c:import>
								<%out.flush();%>
							</div>
						<!-- BRAINTREE END-->
						<!-- BRAINTREE START -->
						</fieldset>
						</div>
						<script>
						if (window.ApplePaySession) {
							$("#applepaypayment").css("display", "block");	
						}
						</script>
						<c:if test="${showSavedPaymentsFlag eq 'false' || userType == 'G' || ! empty WCParam.PayPalEmailId }">
							<script>
								if('${WCParam.PayPalEmailId}' != ''){
									$("#paypal-button_"+${status2.count}).css("display", "block"); 
								}
								var icon = byId("icon_newPayments");
								icon.className = "arrow";
								$(section_list_newPayments).attr("aria-expanded", "true");
								$(section_list_newPayments).css("display", "block");		
							</script>
						</c:if> 
					<!-- BRAINTREE END -->
					
						</p>
					</div>
					<!-- Payment Method Ends Here -->
					
					<br clear="all" />
				</form>
			</div>
		</div>
	</div>
</c:forEach>

<!-- END CheckoutPaymentsAndBillingAddress.jspf -->

